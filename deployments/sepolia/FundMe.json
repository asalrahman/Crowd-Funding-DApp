{
  "address": "0x59DDD6B852144ebBf368313f5CdbFd627Dc247cf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcd5fb1e6c1196f624faa097080bd6e9744bbce958d32c6cc5b108d0718b3cc77",
  "receipt": {
    "to": null,
    "from": "0x7B9419901A9125B5d67a166712867cD56b76dd92",
    "contractAddress": "0x59DDD6B852144ebBf368313f5CdbFd627Dc247cf",
    "transactionIndex": 3,
    "gasUsed": "1034041",
    "logsBloom": "0x
    "blockHash": "0xf34672a0e02a45187a994dc0d36abf348b51afff9dfaefbbf05bf6131d55c4fa",
    "transactionHash": "0xcd5fb1e6c1196f624faa097080bd6e9744bbce958d32c6cc5b108d0718b3cc77",
    "logs": [],
    "blockNumber": 3742905,
    "cumulativeGasUsed": "2862096",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "948b978683e95b6b6ec60161a8c33a73",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// error FundMe__NotOwner();\\nerror FundMe__NotOwner();\\ncontract FundMe {\\n\\n//type decleration\\n        using  PriceConverter for uint256;\\n    //state variables\\n        uint256 public constant MINIMUM_USD =50 * 1e18;\\n        address[] private s_funders;\\n        mapping(address => uint256) public s_addressToAmountFunded;\\n        address private immutable i_OWNER;\\n        AggregatorV3Interface private s_priceFeed;\\n\\n// modifier\\n        modifier onlyOwner() {\\n        // require(msg.sender == i_OWNER);\\n        if (msg.sender != i_OWNER) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n        constructor(address s_priceFeedAddress) {\\n        i_OWNER = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n\\nfunction fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      'Not enough eth'\\n    );\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n\\nfunction withdraw ()public onlyOwner{\\n\\nfor (uint256 funderIndex = 0; funderIndex < s_funders.length ; funderIndex++) \\n{\\n        address funder =  s_funders[funderIndex];\\n        s_addressToAmountFunded[funder] = 0 ;     }\\n\\n //reset the array    \\ns_funders = new address [](0);\\n//actually withdraw funds\\n(bool success, ) =  i_OWNER.call{value: address(this).balance}(\\\"\\\");require(success);\\n}\\n\\n\\nfunction cheaperWithdraw()public onlyOwner{\\n        //assign the  s_funders storage varible  to memmory variable\\n        address[] memory funders = s_funders;\\n        for(uint256 funderIndex = 0; funders.length< funderIndex;funderIndex++){\\n                address funder = funders[funderIndex];\\n                 s_addressToAmountFunded[funder]=0;     }\\n\\n                 s_funders = new address [](0);\\n(bool success, ) =  i_OWNER.call{value: address(this).balance}(\\\"\\\");require(success);\\n}\\n\\n\\n\\n\\n// view funtions\\n/** @notice Gets the amount that an address has funded\\n     *  @param fundingAddress the address of the funder\\n     *  @return the amount funded\\n     */\\n\\nfunction getAddressToAmountFunded(address fundingAddress)public view returns(uint256){\\n   return s_addressToAmountFunded[fundingAddress];\\n}\\n\\nfunction getOwner()public view returns(address){\\n return i_OWNER;\\n}\\nfunction getFunders(uint256 index)public view returns(address){\\n        return s_funders[index];\\n}\\n\\nfunction getPriceFeed()public view returns(AggregatorV3Interface){\\n  return s_priceFeed;\\n}\\n\\n// receive() external payable {\\n//         fund();\\n// }\\n\\n// fallback() external payable {\\n//         fund();\\n// }\\n\\n\\n}\",\"keccak256\":\"0x2ae648956376849126b914f94f132a5f1fd25d9b6ac150939a6271d815e38f2d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n\\r\\nfunction getPrice(AggregatorV3Interface priceFeed) internal  view  returns(uint256){\\r\\n//ABI\\r\\n//address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n\\r\\n  (,int price,,,)=priceFeed.latestRoundData();\\r\\n return uint256(price * 1e10);\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\nfunction getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)internal  view returns (uint256){\\r\\nuint256 ethPrice = getPrice(priceFeed);\\r\\n\\r\\nuint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\nreturn ethAmountInUsd;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x8fac2eda7e2f62bf5570b7f5986c14fdbca7fd7b9f36139f65713790c9f3cea1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012dc380380620012dc8339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000147565b600081519050620000c7816200012d565b92915050565b600060208284031215620000e057600080fd5b6000620000f084828501620000b6565b91505092915050565b600062000106826200010d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200013881620000f9565b81146200014457600080fd5b50565b60805160601c61115a62000182600039600081816102cb015281816104aa01528181610550015281816106db015261091d015261115a6000f3fe6080604052600436106100865760003560e01c80636b69a592116100595780636b69a59214610159578063893d20e8146101845780639e87a5cd146101af578063b60d4288146101da578063be2693f0146101e457610086565b80630343fb251461008b5780631bf6132d146100c85780633a7b6c74146101055780633ccfd60b14610142575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b9f565b6101fb565b6040516100bf9190610d46565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610b9f565b610244565b6040516100fc9190610d46565b60405180910390f35b34801561011157600080fd5b5061012c60048036038101906101279190610bc8565b61025c565b6040516101399190610cf0565b60405180910390f35b34801561014e57600080fd5b506101576102c9565b005b34801561016557600080fd5b5061016e61053f565b60405161017b9190610d46565b60405180910390f35b34801561019057600080fd5b5061019961054c565b6040516101a69190610cf0565b60405180910390f35b3480156101bb57600080fd5b506101c4610574565b6040516101d19190610d0b565b60405180910390f35b6101e261059e565b005b3480156101f057600080fd5b506101f96106d9565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60016020528060005260406000206000915090505481565b6000808281548110610297577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041f576000808281548110610399577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041790610ff5565b915050610351565b50600067ffffffffffffffff811115610461577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561048f5781602001602082028036833780820191505090505b50600090805190602001906104a5929190610a8f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104ec90610cdb565b60006040518083038185875af1925050503d8060008114610529576040519150601f19603f3d011682016040523d82523d6000602084013e61052e565b606091505b505090508061053c57600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109b390919063ffffffff16565b101561061e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061590610d26565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461066d9190610d7d565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610797575b5050505050905060005b808251101561089257600082828151811061082f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061088a90610ff5565b9150506107eb565b50600067ffffffffffffffff8111156108d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156109025781602001602082028036833780820191505090505b5060009080519060200190610918929190610a8f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161095f90610cdb565b60006040518083038185875af1925050503d806000811461099c576040519150601f19603f3d011682016040523d82523d6000602084013e6109a1565b606091505b50509050806109af57600080fd5b5050565b6000806109bf836109ef565b90506000670de0b6b3a764000085836109d89190610f1b565b6109e29190610dd3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190610bf1565b5050509150506402540be40081610a879190610e04565b915050919050565b828054828255906000526020600020908101928215610b08579160200282015b82811115610b075782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aaf565b5b509050610b159190610b19565b5090565b5b80821115610b32576000816000905550600101610b1a565b5090565b600081359050610b45816110c8565b92915050565b600081519050610b5a816110df565b92915050565b600081359050610b6f816110f6565b92915050565b600081519050610b84816110f6565b92915050565b600081519050610b998161110d565b92915050565b600060208284031215610bb157600080fd5b6000610bbf84828501610b36565b91505092915050565b600060208284031215610bda57600080fd5b6000610be884828501610b60565b91505092915050565b600080600080600060a08688031215610c0957600080fd5b6000610c1788828901610b8a565b9550506020610c2888828901610b4b565b9450506040610c3988828901610b75565b9350506060610c4a88828901610b75565b9250506080610c5b88828901610b8a565b9150509295509295909350565b610c7181610f75565b82525050565b610c8081610fd1565b82525050565b6000610c93600e83610d6c565b9150610c9e8261109c565b602082019050919050565b6000610cb6600083610d61565b9150610cc1826110c5565b600082019050919050565b610cd581610fb1565b82525050565b6000610ce682610ca9565b9150819050919050565b6000602082019050610d056000830184610c68565b92915050565b6000602082019050610d206000830184610c77565b92915050565b60006020820190508181036000830152610d3f81610c86565b9050919050565b6000602082019050610d5b6000830184610ccc565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d8882610fb1565b9150610d9383610fb1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dc857610dc761103e565b5b828201905092915050565b6000610dde82610fb1565b9150610de983610fb1565b925082610df957610df861106d565b5b828204905092915050565b6000610e0f82610f87565b9150610e1a83610f87565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e5957610e5861103e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e9657610e9561103e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ed357610ed261103e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f1057610f0f61103e565b5b828202905092915050565b6000610f2682610fb1565b9150610f3183610fb1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6a57610f6961103e565b5b828202905092915050565b6000610f8082610f91565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610fdc82610fe3565b9050919050565b6000610fee82610f91565b9050919050565b600061100082610fb1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110335761103261103e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e6f7420656e6f75676820657468000000000000000000000000000000000000600082015250565b50565b6110d181610f75565b81146110dc57600080fd5b50565b6110e881610f87565b81146110f357600080fd5b50565b6110ff81610fb1565b811461110a57600080fd5b50565b61111681610fbb565b811461112157600080fd5b5056fea26469706673582212204995cd041fe3ac5572c76deb350061971e05299ce324bb2afeec176da7aa4f0064736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80636b69a592116100595780636b69a59214610159578063893d20e8146101845780639e87a5cd146101af578063b60d4288146101da578063be2693f0146101e457610086565b80630343fb251461008b5780631bf6132d146100c85780633a7b6c74146101055780633ccfd60b14610142575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b9f565b6101fb565b6040516100bf9190610d46565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610b9f565b610244565b6040516100fc9190610d46565b60405180910390f35b34801561011157600080fd5b5061012c60048036038101906101279190610bc8565b61025c565b6040516101399190610cf0565b60405180910390f35b34801561014e57600080fd5b506101576102c9565b005b34801561016557600080fd5b5061016e61053f565b60405161017b9190610d46565b60405180910390f35b34801561019057600080fd5b5061019961054c565b6040516101a69190610cf0565b60405180910390f35b3480156101bb57600080fd5b506101c4610574565b6040516101d19190610d0b565b60405180910390f35b6101e261059e565b005b3480156101f057600080fd5b506101f96106d9565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60016020528060005260406000206000915090505481565b6000808281548110610297577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041f576000808281548110610399577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041790610ff5565b915050610351565b50600067ffffffffffffffff811115610461577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561048f5781602001602082028036833780820191505090505b50600090805190602001906104a5929190610a8f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104ec90610cdb565b60006040518083038185875af1925050503d8060008114610529576040519150601f19603f3d011682016040523d82523d6000602084013e61052e565b606091505b505090508061053c57600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109b390919063ffffffff16565b101561061e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061590610d26565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461066d9190610d7d565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610797575b5050505050905060005b808251101561089257600082828151811061082f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061088a90610ff5565b9150506107eb565b50600067ffffffffffffffff8111156108d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156109025781602001602082028036833780820191505090505b5060009080519060200190610918929190610a8f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161095f90610cdb565b60006040518083038185875af1925050503d806000811461099c576040519150601f19603f3d011682016040523d82523d6000602084013e6109a1565b606091505b50509050806109af57600080fd5b5050565b6000806109bf836109ef565b90506000670de0b6b3a764000085836109d89190610f1b565b6109e29190610dd3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190610bf1565b5050509150506402540be40081610a879190610e04565b915050919050565b828054828255906000526020600020908101928215610b08579160200282015b82811115610b075782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aaf565b5b509050610b159190610b19565b5090565b5b80821115610b32576000816000905550600101610b1a565b5090565b600081359050610b45816110c8565b92915050565b600081519050610b5a816110df565b92915050565b600081359050610b6f816110f6565b92915050565b600081519050610b84816110f6565b92915050565b600081519050610b998161110d565b92915050565b600060208284031215610bb157600080fd5b6000610bbf84828501610b36565b91505092915050565b600060208284031215610bda57600080fd5b6000610be884828501610b60565b91505092915050565b600080600080600060a08688031215610c0957600080fd5b6000610c1788828901610b8a565b9550506020610c2888828901610b4b565b9450506040610c3988828901610b75565b9350506060610c4a88828901610b75565b9250506080610c5b88828901610b8a565b9150509295509295909350565b610c7181610f75565b82525050565b610c8081610fd1565b82525050565b6000610c93600e83610d6c565b9150610c9e8261109c565b602082019050919050565b6000610cb6600083610d61565b9150610cc1826110c5565b600082019050919050565b610cd581610fb1565b82525050565b6000610ce682610ca9565b9150819050919050565b6000602082019050610d056000830184610c68565b92915050565b6000602082019050610d206000830184610c77565b92915050565b60006020820190508181036000830152610d3f81610c86565b9050919050565b6000602082019050610d5b6000830184610ccc565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d8882610fb1565b9150610d9383610fb1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dc857610dc761103e565b5b828201905092915050565b6000610dde82610fb1565b9150610de983610fb1565b925082610df957610df861106d565b5b828204905092915050565b6000610e0f82610f87565b9150610e1a83610f87565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e5957610e5861103e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e9657610e9561103e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ed357610ed261103e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f1057610f0f61103e565b5b828202905092915050565b6000610f2682610fb1565b9150610f3183610fb1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6a57610f6961103e565b5b828202905092915050565b6000610f8082610f91565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610fdc82610fe3565b9050919050565b6000610fee82610f91565b9050919050565b600061100082610fb1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110335761103261103e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e6f7420656e6f75676820657468000000000000000000000000000000000000600082015250565b50565b6110d181610f75565b81146110dc57600080fd5b50565b6110e881610f87565b81146110f357600080fd5b50565b6110ff81610fb1565b811461110a57600080fd5b50565b61111681610fbb565b811461112157600080fd5b5056fea26469706673582212204995cd041fe3ac5572c76deb350061971e05299ce324bb2afeec176da7aa4f0064736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}